(()=>{var __webpack_modules__={8967:module=>{eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8967;\nmodule.exports = webpackEmptyContext;\n\n//# sourceURL=webpack://sgu-crawl/./node_modules/express/lib/_sync?")},4290:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval("\n// UNUSED EXPORTS: default\n\n// EXTERNAL MODULE: ./node_modules/dotenv/config.js\nvar config = __webpack_require__(5371);\n// EXTERNAL MODULE: ./node_modules/express/index.js\nvar express = __webpack_require__(9268);\nvar express_default = /*#__PURE__*/__webpack_require__.n(express);\n;// CONCATENATED MODULE: ./src/utils/getRank.ts\nconst sortArray = (data, sortBy) => {\r\n    return data.sort((a, b) => {\r\n        if (isNaN(parseFloat(b[sortBy]) - parseFloat(a[sortBy]))) {\r\n            console.log(parseFloat(b[sortBy]) - parseFloat(a[sortBy]), b[sortBy], a[sortBy], b, a);\r\n        }\r\n        return parseFloat(b[sortBy]) - parseFloat(a[sortBy]);\r\n    });\r\n};\r\nconst getRank = (data, idStudent) => {\r\n    data = sortArray(data, 'aveSemesterType4Raw');\r\n    const index = data.findIndex((student) => student.id === idStudent);\r\n    if (index === -1) {\r\n        return null;\r\n    }\r\n    return Object.assign(Object.assign({ rank: (index + 1) + '/' + data.length }, data[index]), { top5: data.slice(0, 5) });\r\n};\r\n/* harmony default export */ const utils_getRank = (getRank);\r\n\n// EXTERNAL MODULE: ./node_modules/firebase/app/dist/index.mjs\nvar dist = __webpack_require__(9286);\n// EXTERNAL MODULE: ./node_modules/firebase/storage/dist/index.mjs + 2 modules\nvar storage_dist = __webpack_require__(4355);\n// EXTERNAL MODULE: ./node_modules/firebase/firestore/dist/index.mjs + 1 modules\nvar firestore_dist = __webpack_require__(7880);\n// EXTERNAL MODULE: ./node_modules/request/index.js\nvar request = __webpack_require__(4079);\nvar request_default = /*#__PURE__*/__webpack_require__.n(request);\n;// CONCATENATED MODULE: ./src/firebase/index.ts\n\r\n\r\n\r\n\r\nconst POINTS_COLLECTION = 'POINTS';\r\nconst FEEDBACKS_COLLECTION = 'FEEDBACKS';\r\nclass FireBaseClass {\r\n    constructor() {\r\n        this.firebaseConfig = {\r\n            apiKey: process.env.FIREBASE_API_KEY,\r\n            authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n            projectId: process.env.FIREBASE_PROJECT_ID,\r\n            storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n            messagingSenderId: process.env.FIREBASE_MESSAGE_SENDER_ID,\r\n            appId: process.env.FIREBASE_APP_ID,\r\n            measurementId: process.env.FIREBASE_MEASUREMENT_ID,\r\n        };\r\n        FireBaseClass.firebase = (0,dist/* initializeApp */.ZF)(this.firebaseConfig);\r\n        FireBaseClass.storage = (0,storage_dist/* getStorage */.cF)(FireBaseClass.firebase);\r\n        FireBaseClass.db = (0,firestore_dist/* getFirestore */.ad)(FireBaseClass.firebase);\r\n        FireBaseClass.rootRef = (0,storage_dist/* ref */.iH)(FireBaseClass.storage);\r\n        FireBaseClass.pointsColRef = (0,firestore_dist/* collection */.hJ)(FireBaseClass.db, POINTS_COLLECTION);\r\n        FireBaseClass.feedbacksColRef = (0,firestore_dist/* collection */.hJ)(FireBaseClass.db, FEEDBACKS_COLLECTION);\r\n        FireBaseClass.pointsDocRef = (0,firestore_dist/* doc */.JU)(FireBaseClass.pointsColRef);\r\n    }\r\n    static getFileByItemRef(itemRef) {\r\n        return (0,storage_dist/* getMetadata */.sd)(itemRef);\r\n    }\r\n    static getAllFiles() {\r\n        return (0,storage_dist/* listAll */.aF)(this.rootRef);\r\n    }\r\n    static getFileDataByRef(fileRef) {\r\n        return (0,storage_dist/* getDownloadURL */.Jt)(fileRef).then((url) => {\r\n            return new Promise((resolve, reject) => {\r\n                request_default()(url, (error, data) => {\r\n                    if (error) {\r\n                        return reject(error);\r\n                    }\r\n                    return resolve(data.body);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    static getFileDataByName(fileName) {\r\n        return (0,storage_dist/* getDownloadURL */.Jt)((0,storage_dist/* ref */.iH)(this.storage, fileName)).then((url) => {\r\n            return new Promise((resolve, reject) => {\r\n                request_default()(url, (error, data) => {\r\n                    if (error) {\r\n                        return reject(error);\r\n                    }\r\n                    return resolve(data.body);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    static uploadFileWithString(string, filename) {\r\n        return (0,storage_dist/* uploadString */.sf)((0,storage_dist/* ref */.iH)(this.storage, filename), string);\r\n    }\r\n    static uploadFile(file, filename) {\r\n        return (0,storage_dist/* uploadBytes */.KV)((0,storage_dist/* ref */.iH)(this.storage, filename), file);\r\n    }\r\n    static addItemToPointsCollection(docName, value) {\r\n        return (0,firestore_dist/* setDoc */.pl)((0,firestore_dist/* doc */.JU)(this.pointsColRef, docName), value);\r\n    }\r\n    static addItemToFeedbacksCollection(docName, value) {\r\n        return (0,firestore_dist/* setDoc */.pl)((0,firestore_dist/* doc */.JU)(this.feedbacksColRef, docName), value);\r\n    }\r\n    static checkItemPointExist(docName) {\r\n        return (0,firestore_dist/* getDoc */.QT)((0,firestore_dist/* doc */.JU)(this.pointsColRef, docName)).then((docSnap) => {\r\n            if (docSnap.exists()) {\r\n                return {\r\n                    isExist: true,\r\n                    data: docSnap.data()\r\n                };\r\n            }\r\n            return {\r\n                isExist: false,\r\n                data: null\r\n            };\r\n        });\r\n    }\r\n    static getApprovedPointNotAvailable() {\r\n        const q = (0,firestore_dist/* query */.IO)(this.pointsColRef, (0,firestore_dist/* where */.ar)('prefixId', '!=', ''), (0,firestore_dist/* where */.ar)('isApproved', '==', true), (0,firestore_dist/* where */.ar)('isAvailable', '==', false));\r\n        return (0,firestore_dist/* getDocs */.PL)(q).then((querySnapshot) => {\r\n            const arr = [];\r\n            querySnapshot.forEach((doc) => {\r\n                arr.push(doc.data());\r\n            });\r\n            return arr;\r\n        });\r\n    }\r\n    static getApprovedPointAvailable() {\r\n        const q = (0,firestore_dist/* query */.IO)(this.pointsColRef, (0,firestore_dist/* where */.ar)('prefixId', '!=', ''), (0,firestore_dist/* where */.ar)('isApproved', '==', true), (0,firestore_dist/* where */.ar)('isAvailable', '==', true));\r\n        return (0,firestore_dist/* getDocs */.PL)(q).then((querySnapshot) => {\r\n            const arr = [];\r\n            querySnapshot.forEach((doc) => {\r\n                arr.push(doc.data());\r\n            });\r\n            return arr;\r\n        });\r\n    }\r\n    static getAllPoints() {\r\n        const q = (0,firestore_dist/* query */.IO)(this.pointsColRef);\r\n        return (0,firestore_dist/* getDocs */.PL)(q).then((querySnapshot) => {\r\n            const arr = [];\r\n            querySnapshot.forEach((doc) => {\r\n                arr.push(doc.data());\r\n            });\r\n            return arr;\r\n        });\r\n    }\r\n}\r\nFireBaseClass.firebase = null;\r\nFireBaseClass.storage = null;\r\nFireBaseClass.rootRef = null;\r\nFireBaseClass.db = null;\r\nFireBaseClass.pointsColRef = null;\r\nFireBaseClass.feedbacksColRef = null;\r\nFireBaseClass.pointsDocRef = null;\r\nconst firebaseClass = new FireBaseClass();\r\n/* harmony default export */ const firebase = (FireBaseClass);\r\n\r\n\n// EXTERNAL MODULE: ./node_modules/cors/lib/index.js\nvar lib = __webpack_require__(7846);\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\n;// CONCATENATED MODULE: ./src/utils/generateId.ts\nconst generateId = (prefixId, index) => {\r\n    while (index.length < 4) {\r\n        index = '0' + index;\r\n    }\r\n    return prefixId.concat(index);\r\n};\r\n/* harmony default export */ const utils_generateId = (generateId);\r\n\n// EXTERNAL MODULE: ./node_modules/cheerio/lib/esm/index.js + 69 modules\nvar esm = __webpack_require__(9564);\n;// CONCATENATED MODULE: ./src/utils/getOneStudent.ts\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nconst getPointText = (text) => {\r\n    try {\r\n        const specialCase = ['dtbhk_10/100', 'dtbhk_4', 'dtbtl', 'dtbtls'];\r\n        let index = -1;\r\n        for (let i = 0; i < specialCase.length; i++) {\r\n            if (text.includes(specialCase[i])) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (index !== -1) {\r\n            return text.split(specialCase[index])[1];\r\n        }\r\n        const arrReg = /\\d+(\\.?\\d+)?$/.exec(text);\r\n        if (!arrReg) {\r\n            return '0';\r\n        }\r\n        return arrReg[0];\r\n    }\r\n    catch (error) {\r\n        console.log(text);\r\n        throw new Error('Stop');\r\n    }\r\n};\r\nconst getOneStudent = (id) => __awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        return new Promise((resolve, reject) => {\r\n            request_default()('http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemdiemthi&id=' + id, (error, response) => {\r\n                if (error) {\r\n                    return resolve({\r\n                        id: id,\r\n                        semester: '',\r\n                        accumulatedCreditsRaw: '0',\r\n                        creditsRaw: '0',\r\n                        aveAccumulatedType4Raw: '0',\r\n                        aveAccumulatedType10Raw: '0',\r\n                        aveSemesterType4Raw: '0',\r\n                        aveSemesterType10Raw: '0',\r\n                        isError: true,\r\n                    });\r\n                }\r\n                const $ = (0,esm/* load */.zD)(response.body);\r\n                const semester = $('#ctl00_ContentPlaceHolder1_ctl00_div1 table tbody tr.title-hk-diem').last().text().trim();\r\n                let aveSemesterType10Raw = null;\r\n                let aveSemesterType4Raw = null;\r\n                let aveAccumulatedType10Raw = null;\r\n                let aveAccumulatedType4Raw = null;\r\n                let creditsRaw = null;\r\n                let accumulatedCreditsRaw = null;\r\n                if (semester !== 'Học kỳ 2 - Năm học 2021-2022') {\r\n                    return resolve({\r\n                        id: id,\r\n                        semester,\r\n                        accumulatedCreditsRaw: '0',\r\n                        creditsRaw: '0',\r\n                        aveAccumulatedType4Raw: '0',\r\n                        aveAccumulatedType10Raw: '0',\r\n                        aveSemesterType4Raw: '0',\r\n                        aveSemesterType10Raw: '0',\r\n                        isError: true,\r\n                    });\r\n                }\r\n                accumulatedCreditsRaw = $('#ctl00_ContentPlaceHolder1_ctl00_div1 table tbody tr.row-diemTK').last().text().trim();\r\n                creditsRaw = $('#ctl00_ContentPlaceHolder1_ctl00_div1 table tbody tr.row-diemTK').last().prev().text().trim();\r\n                aveAccumulatedType4Raw = $('#ctl00_ContentPlaceHolder1_ctl00_div1 table tbody tr.row-diemTK').last().prev().prev().text().trim();\r\n                aveAccumulatedType10Raw = $('#ctl00_ContentPlaceHolder1_ctl00_div1 table tbody tr.row-diemTK').last().prev().prev().prev().text().trim();\r\n                aveSemesterType4Raw = $('#ctl00_ContentPlaceHolder1_ctl00_div1 table tbody tr.row-diemTK').last().prev().prev().prev().prev().text().trim();\r\n                aveSemesterType10Raw = $('#ctl00_ContentPlaceHolder1_ctl00_div1 table tbody tr.row-diemTK').last().prev().prev().prev().prev().prev().text().trim();\r\n                accumulatedCreditsRaw = getPointText(accumulatedCreditsRaw);\r\n                creditsRaw = getPointText(creditsRaw);\r\n                aveAccumulatedType4Raw = getPointText(aveAccumulatedType4Raw);\r\n                aveAccumulatedType10Raw = getPointText(aveAccumulatedType10Raw);\r\n                aveSemesterType4Raw = getPointText(aveSemesterType4Raw);\r\n                aveSemesterType10Raw = getPointText(aveSemesterType10Raw);\r\n                if (accumulatedCreditsRaw === '' ||\r\n                    creditsRaw === '' ||\r\n                    aveAccumulatedType4Raw === '' ||\r\n                    aveAccumulatedType10Raw === '' ||\r\n                    aveSemesterType4Raw === '' ||\r\n                    aveSemesterType10Raw === '') {\r\n                    return reject('One of fields is empty');\r\n                }\r\n                if (parseFloat(aveAccumulatedType4Raw) > 10 ||\r\n                    parseFloat(aveAccumulatedType10Raw) > 10 ||\r\n                    parseFloat(aveSemesterType4Raw) > 10 ||\r\n                    parseFloat(aveSemesterType10Raw) > 10) {\r\n                    return reject('point is greater than 10');\r\n                }\r\n                return resolve({\r\n                    id: id,\r\n                    semester,\r\n                    accumulatedCreditsRaw,\r\n                    creditsRaw,\r\n                    aveAccumulatedType4Raw,\r\n                    aveAccumulatedType10Raw,\r\n                    aveSemesterType4Raw,\r\n                    aveSemesterType10Raw,\r\n                    isError: false,\r\n                });\r\n            });\r\n        });\r\n    }\r\n    catch (error) {\r\n        throw Error(error);\r\n    }\r\n});\r\n/* harmony default export */ const utils_getOneStudent = (getOneStudent);\r\n\n;// CONCATENATED MODULE: ./src/utils/getAllStudents.ts\nvar getAllStudents_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nconst totalItem = 20;\r\nconst percentToBreak = 1;\r\nconst getAllStudents = (prefixId) => getAllStudents_awaiter(void 0, void 0, void 0, function* () {\r\n    let isBreak = false;\r\n    let currentIndex = 1;\r\n    let requests = [];\r\n    const finalResult = [];\r\n    while (!isBreak) {\r\n        try {\r\n            for (let i = 1; i <= totalItem; i++) {\r\n                const id = utils_generateId(prefixId, String(currentIndex + i));\r\n                console.log('Getting student', id);\r\n                requests.push(utils_getOneStudent(id));\r\n            }\r\n            const result = yield Promise.all(requests);\r\n            finalResult.push(...result);\r\n            let errorCount = 0;\r\n            for (let i = 0; i < result.length; i++) {\r\n                if (result[i].isError) {\r\n                    errorCount++;\r\n                }\r\n            }\r\n            if (errorCount / result.length >= percentToBreak) {\r\n                console.log('The worker was finish, because error count is', errorCount * 100 / result.length);\r\n                isBreak = true;\r\n            }\r\n            else {\r\n                requests = [];\r\n                currentIndex += totalItem;\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log('error', error);\r\n            isBreak = true;\r\n        }\r\n    }\r\n    return finalResult;\r\n});\r\n/* harmony default export */ const utils_getAllStudents = (getAllStudents);\r\n\n;// CONCATENATED MODULE: ./src/cron/schedule.ts\nvar schedule_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nconst crawlApprovedRequest = (curTask) => schedule_awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        let task = curTask;\r\n        if (!curTask) {\r\n            const result = yield firebase.getApprovedPointNotAvailable();\r\n            if (result.length === 0) {\r\n                console.log('Happy day without any works');\r\n                return Promise.resolve();\r\n            }\r\n            task = result[0];\r\n        }\r\n        if (task.prefixId.length !== 6) {\r\n            Promise.resolve();\r\n            console.log('Current task', task.prefixId, ' has wrong prefixId');\r\n            return Promise.resolve();\r\n        }\r\n        const students = yield utils_getAllStudents(task.prefixId);\r\n        yield firebase.uploadFileWithString(JSON.stringify(students), `${task.name}.json`);\r\n        yield firebase.addItemToPointsCollection(task.name, Object.assign(Object.assign({}, task), { isAvailable: true, isApproved: true }));\r\n        console.log(task.name + ' is available now');\r\n        return Promise.resolve();\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n});\r\n\n;// CONCATENATED MODULE: ./src/index.ts\nvar src_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst app = express_default()();\r\nconst PORT = process.env.PORT || 3000;\r\napp.use(express_default().json());\r\napp.use(express_default().urlencoded({ extended: false }));\r\napp.use(express_default()[\"static\"]('public'));\r\napp.use(lib_default()());\r\napp.get('/api/rank/', (req, res) => src_awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        const { faculty, semester, year, k, idStudent } = req.query;\r\n        if (!faculty || !semester || !year || !k || !idStudent) {\r\n            return res.status(404).send({\r\n                success: false,\r\n                error: 'Query is not valid',\r\n                data: null,\r\n            });\r\n        }\r\n        const fileName = `${String(faculty).toLocaleUpperCase()}_${semester}_${year}_${k}`;\r\n        let errorCodeFirebase = null;\r\n        let file = null;\r\n        try {\r\n            file = yield firebase.getFileDataByName(`${fileName}.json`);\r\n        }\r\n        catch (error) {\r\n            errorCodeFirebase = error.code;\r\n        }\r\n        if (errorCodeFirebase === 'storage/object-not-found') {\r\n            return res.status(404).send({\r\n                success: false,\r\n                error: 'Không có cơ sở dữ liệu này',\r\n                data: null,\r\n                query: {\r\n                    faculty,\r\n                    semester,\r\n                    year,\r\n                    k,\r\n                }\r\n            });\r\n        }\r\n        if (errorCodeFirebase) {\r\n            throw new Error('Unknow error from firebase');\r\n        }\r\n        const result = utils_getRank(JSON.parse(file), idStudent);\r\n        if (!result) {\r\n            return res.status(404).send({\r\n                success: false,\r\n                error: 'Không tìm thấy mã sinh viên',\r\n                data: null,\r\n            });\r\n        }\r\n        return res.status(200).send({\r\n            success: true,\r\n            error: null,\r\n            data: result,\r\n        });\r\n    }\r\n    catch (error) {\r\n        console.log('Error', error);\r\n        res.status(500).send({\r\n            success: false,\r\n            error: 'Server internal',\r\n            data: null\r\n        });\r\n    }\r\n}));\r\napp.get('/api/all-points', (req, res) => src_awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        const result = yield firebase.getAllPoints().then((data) => data);\r\n        res.status(200).send({\r\n            success: true,\r\n            data: result.map((item) => {\r\n                const splits = item.name.split('_');\r\n                return Object.assign({ displayName: splits[0] + ' K' + splits[3], faculty: splits[0], k: splits[3] }, item);\r\n            })\r\n        });\r\n    }\r\n    catch (error) {\r\n        res.status(500).send({\r\n            success: false,\r\n            error: 'Server internal',\r\n            data: null\r\n        });\r\n    }\r\n}));\r\napp.get('/api/all-available-points', (req, res) => src_awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        const result = yield firebase.getApprovedPointAvailable().then((data) => data);\r\n        res.status(200).send({\r\n            success: true,\r\n            data: result.map((item) => {\r\n                const splits = item.name.split('_');\r\n                return Object.assign({ displayName: splits[0] + ' K' + splits[3], faculty: splits[0], k: splits[3] }, item);\r\n            })\r\n        });\r\n    }\r\n    catch (error) {\r\n        res.status(500).send({\r\n            success: false,\r\n            error: 'Server internal',\r\n            data: null\r\n        });\r\n    }\r\n}));\r\napp.post('/api/point', (req, res) => src_awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        const { faculty, k, prefixId } = req.body;\r\n        if (!faculty || !k) {\r\n            return res.status(500).send({\r\n                success: false,\r\n                error: 'Missing fields',\r\n                data: null\r\n            });\r\n        }\r\n        const fileName = `${String(faculty).toLocaleUpperCase()}_${'2'}_${'20212022'}_${k}`;\r\n        const existence = yield firebase.checkItemPointExist(`${faculty.toLocaleUpperCase()}_2_20212022_${k}`);\r\n        if (existence.isExist) {\r\n            yield firebase.addItemToPointsCollection(fileName, {\r\n                createdTime: existence.data.createdTime,\r\n                k: k,\r\n                name: fileName,\r\n                requestedTime: existence.data.requestedTime,\r\n                semester: '2',\r\n                year: '20212022',\r\n                isApproved: existence.data.isApproved,\r\n                isAvailable: existence.data.isAvailable,\r\n                foundCount: existence.data.foundCount + 1,\r\n                prefixId: existence.data.prefixId || prefixId || '',\r\n            });\r\n            return res.status(500).send({\r\n                success: false,\r\n                error: 'Đã có dữ liệu này rồi',\r\n            });\r\n        }\r\n        yield firebase.addItemToPointsCollection(fileName, {\r\n            createdTime: new Date().toISOString(),\r\n            k: k,\r\n            name: fileName,\r\n            requestedTime: new Date().toISOString(),\r\n            semester: '2',\r\n            year: '20212022',\r\n            isApproved: false,\r\n            isAvailable: false,\r\n            foundCount: 0,\r\n            prefixId: prefixId || ''\r\n        });\r\n        return res.status(201).send({\r\n            success: false\r\n        });\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n        res.status(500).send({\r\n            success: false,\r\n            error: 'Server internal',\r\n            data: null\r\n        });\r\n    }\r\n}));\r\napp.get('/api/approve-point', (req, res) => src_awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        const { docName } = req.query;\r\n        if (!docName) {\r\n            return res.status(400).send({\r\n                success: false,\r\n                error: 'Missing docName query'\r\n            });\r\n        }\r\n        const existence = yield firebase.checkItemPointExist(docName);\r\n        if (!existence.isExist) {\r\n            return res.status(500).send({\r\n                success: false,\r\n                error: 'You need to create request first',\r\n            });\r\n        }\r\n        const task = existence.data;\r\n        if (task.isAvailable) {\r\n            return res.status(500).send({\r\n                success: false,\r\n                error: 'This point is available !!',\r\n            });\r\n        }\r\n        crawlApprovedRequest(task).then(() => {\r\n            console.log('Maybe it should sent mail to admin');\r\n        });\r\n        res.status(200).send({\r\n            success: true,\r\n        });\r\n    }\r\n    catch (error) {\r\n        console.log('Error');\r\n    }\r\n}));\r\napp.listen(PORT, () => {\r\n    console.log('Server is opened port ' + PORT);\r\n});\r\n/* harmony default export */ const src = ((/* unused pure expression or super */ null && (app)));\r\n\n\n//# sourceURL=webpack://sgu-crawl/./src/index.ts_+_6_modules?")},9491:e=>{"use strict";e.exports=require("assert")},852:e=>{"use strict";e.exports=require("async_hooks")},4300:e=>{"use strict";e.exports=require("buffer")},6113:e=>{"use strict";e.exports=require("crypto")},9523:e=>{"use strict";e.exports=require("dns")},2361:e=>{"use strict";e.exports=require("events")},7147:e=>{"use strict";e.exports=require("fs")},3685:e=>{"use strict";e.exports=require("http")},6281:e=>{"use strict";e.exports=require("http2")},5687:e=>{"use strict";e.exports=require("https")},1808:e=>{"use strict";e.exports=require("net")},2037:e=>{"use strict";e.exports=require("os")},1017:e=>{"use strict";e.exports=require("path")},5477:e=>{"use strict";e.exports=require("punycode")},3477:e=>{"use strict";e.exports=require("querystring")},2781:e=>{"use strict";e.exports=require("stream")},1576:e=>{"use strict";e.exports=require("string_decoder")},4404:e=>{"use strict";e.exports=require("tls")},6224:e=>{"use strict";e.exports=require("tty")},7310:e=>{"use strict";e.exports=require("url")},3837:e=>{"use strict";e.exports=require("util")},9796:e=>{"use strict";e.exports=require("zlib")}},__webpack_module_cache__={},deferred,next,installedChunks;function __webpack_require__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var t=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__),t.loaded=!0,t.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.x=()=>{var e=__webpack_require__.O(void 0,[510],(()=>__webpack_require__(4290)));return __webpack_require__.O(e)},deferred=[],__webpack_require__.O=(e,r,t,n)=>{if(!r){var s=1/0;for(l=0;l<deferred.length;l++){for(var[r,t,n]=deferred[l],a=!0,i=0;i<r.length;i++)(!1&n||s>=n)&&Object.keys(__webpack_require__.O).every((e=>__webpack_require__.O[e](r[i])))?r.splice(i--,1):(a=!1,n<s&&(s=n));if(a){deferred.splice(l--,1);var o=t();void 0!==o&&(e=o)}}return e}n=n||0;for(var l=deferred.length;l>0&&deferred[l-1][2]>n;l--)deferred[l]=deferred[l-1];deferred[l]=[r,t,n]},__webpack_require__.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(r,{a:r}),r},__webpack_require__.d=(e,r)=>{for(var t in r)__webpack_require__.o(r,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},__webpack_require__.f={},__webpack_require__.e=e=>Promise.all(Object.keys(__webpack_require__.f).reduce(((r,t)=>(__webpack_require__.f[t](e,r),r)),[])),__webpack_require__.u=e=>e+".js",__webpack_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),installedChunks={826:1},__webpack_require__.O.require=e=>installedChunks[e],__webpack_require__.f.require=(e,r)=>{installedChunks[e]||(e=>{var r=e.modules,t=e.ids,n=e.runtime;for(var s in r)__webpack_require__.o(r,s)&&(__webpack_require__.m[s]=r[s]);n&&n(__webpack_require__);for(var a=0;a<t.length;a++)installedChunks[t[a]]=1;__webpack_require__.O()})(require("./"+__webpack_require__.u(e)))},next=__webpack_require__.x,__webpack_require__.x=()=>(__webpack_require__.e(510),next());var __webpack_exports__=__webpack_require__.x()})();